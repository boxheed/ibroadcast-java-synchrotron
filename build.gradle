buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
    	maven {
      		url "https://artifacts.fizzpod.com/public/mvn/"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'com.fizzpod:gradle-java-opinion:0.14.13'
		classpath 'com.github.johnrengelman:shadow:8.1.1'
  	}
}

apply plugin: 'com.fizzpod.pater-build'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'


mainClassName = 'com.fizzpod.ibroadcast.Main'

application {
	applicationName = "ibsync"
}

shadowJar {
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

artifacts {
    tasks.named("shadowJar")
}

build.dependsOn shadowJar

dependencies {
	implementation 'org.apache.groovy:groovy-all:4.0.17'
	implementation 'org.apache.groovy:groovy-contracts:4.0.17'

	implementation 'org.tinylog:tinylog-api:2.6.2'
	implementation 'org.tinylog:tinylog-impl:2.6.2'
	implementation 'org.mapdb:mapdb:3.0.10'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'net.jthink:jaudiotagger:3.0.1'
	implementation 'commons-io:commons-io:2.15.1'
	implementation 'org.apache.commons:commons-lang3:3.14.0'

	testImplementation platform("org.spockframework:spock-bom:2.3-groovy-4.0")
  	testImplementation "org.spockframework:spock-core"

}

githubRelease {
    token project.hasProperty("github_release_token")? github_release_token: ""
	tagName 'release-' + project.version
	releaseName 'Release ' + project.version
    owner "boxheed" 
    targetCommitish "main" 
    generateReleaseNotes true 
    draft true 
	dryRun false
    releaseAssets { ->
		jar.outputs.files +
		bootJar.outputs.files +
		bootDistZip.outputs.files +
		bootDistTar.outputs.files
	}
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}
